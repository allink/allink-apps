.grid-static-container {

    .the-grid {
        @include clearfix();
        @include make-row();
        // on XS we have a smaller column padding
        @include make-row-sm-max();
        // Negativ margin to peacefully fight the item's margin
        margin-bottom: -$app-content-plugin-static-grid-item-spacing-xs;
        @media (min-width:$screen-md) {
            margin-bottom: -$app-content-plugin-static-grid-item-spacing-md;
        }
        @media (min-width:$screen-md) {
            margin-bottom: -$app-content-plugin-static-grid-item-spacing-xl;
        }
    }

    // column settings
    .grid-item {
        .items-per-row-1 & {
            @include make-xs-column(24);
        }
        .items-per-row-2 & {
            @include make-xs-column(24);
            @include make-sm-column(12);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: left; }
            }
        }
        .items-per-row-3 & {
            @include make-xs-column(24);
            @include make-sm-column(12);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: left; }
            }
            @include make-lg-column(8);
            @media (min-width:$screen-lg) {
                &:nth-child(2n+1) { clear: none; }
                &:nth-child(3n+1) { clear: left; }
            }
        }
        .items-per-row-4 & {
            @include make-xs-column(24);
            @include make-sm-column(12);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: left; }
            }
            @include make-md-column(6);
            @media (min-width:$screen-md) {
                &:nth-child(2n+1) { clear: none; }
                &:nth-child(4n+1) { clear: left; }
            }
        }
        .items-per-row-5 & {
            @include make-xs-column(12);
            @media (min-width:$screen-xs) {
                &:nth-child(2n+1) { clear: left; }
            }
            @include make-sm-column(8);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: none; }
                &:nth-child(3n+1) { clear: left; }
            }
            @include make-md-column(6);
            @media (min-width:$screen-md) {
                &:nth-child(3n+1) { clear: none; }
                &:nth-child(4n+1) { clear: left; }
            }
            @media (min-width:$screen-lg) {
                width: 20%;
                &:nth-child(4n+1) { clear: none; }
                &:nth-child(5n+1) { clear: left; }
            }
        }
        .items-per-row-6 & {
            @include make-xs-column(12);
            @media (min-width:$screen-xs) {
                &:nth-child(2n+1) { clear: left; }
            }
            @include make-sm-column(8);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: none; }
                &:nth-child(3n+1) { clear: left; }
            }
            @include make-md-column(4);
            @media (min-width:$screen-md) {
                &:nth-child(3n+1) { clear: none; }
                &:nth-child(6n+1) { clear: left; }
            }
        }
    }

    // spacing between items
    .grid-item {
        margin-bottom: $app-content-plugin-static-grid-item-spacing-xs;
        @media (min-width:$screen-md) {
            margin-bottom: $app-content-plugin-static-grid-item-spacing-md;
        }
        @media (min-width:$screen-md) {
            margin-bottom: $app-content-plugin-static-grid-item-spacing-xl;
        }
        &.appended {
            // TBD
        }
    }

    // add smaller columns on XS (we have to fight the specifcy war in order to avoid an !important)
    .the-grid {
        .grid-item {
            @include column-padding-sm-max();
        }
    }

}
